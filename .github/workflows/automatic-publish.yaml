name: Automatic publish

on:
  push:
    tags: 
      - "*.*.*"

jobs:
  desktop:
    runs-on: macos-latest
    env:
      CC_LD: "./zig cc"
      TARGETS: >-
        i386-linux-gnu x86_64-linux-gnu arm-linux-musleabi aarch64-linux-gnu powerpc-linux-musl
        powerpc64-linux-musl riscv64-linux-musl x86_64-macos aarch64-macos
        i386-windows x86_64-windows aarch64-windows

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
          
      - name: Checkout zig lang
        run: >- 
          wget -qO- https://ziglang.org/download/0.9.1/zig-macos-x86_64-0.9.1.tar.xz |
          tar xvz --strip-components 1
          
      - name: Building interpreter's binaries
        run: ./scripts/cc_interpreter.rb 

      - name: Building dynamic libaries
        run: ./scripts/cc_dynamiclib.rb 
          
      - name: General report
        run: tail -n +1 *.log
        
      - name: Upload binaries and libaries to github (tarballs)
        uses: softprops/action-gh-release@v1
        with:
          files: "*.tar.gz"

      - name: Upload binaries and libaries to github (zippies)
        uses: softprops/action-gh-release@v1
        with:
          files: "*.zip"

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: rodrigodornelles
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: rodrigodornelles/3bc-lang:${{github.ref_name}},rodrigodornelles/3bc-lang:latest
          platforms: >
            linux/386,linux/amd64,linux/arm/v5,linux/arm/v7,linux/arm64/v8,
            linux/mips64le,linux/ppc64le,linux/s390x

  freebsd:
    runs-on: macos-10.15
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Building x86 32/64bits project
        uses: vmactions/freebsd-vm@v0.1.5
        with:
          usesh: true
          run: |
            mkdir 32bits 64bits
            clang programs/interpreter.c -m32 -Os -lm -o ./32bits/3bc
            clang programs/interpreter.c -m64 -Os -lm -o ./64bits/3bc
            strip ./32bits/3bc
            strip ./64bits/3bc
            
      - name: Packaging project
        run: |
          tar -czf bsd-i386-interpreter-3bc.tar.gz ./32bits/3bc
          tar -czf bsd-x86_64-interpreter-3bc.tar.gz ./64bits/3bc


      - name: Upload binaries to github
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz

  nodejs: 
    runs-on: ubuntu-latest
    container: emscripten/emsdk     
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      
      - name: Checkout libaries
        run: sudo apt search zip; sudo apt install -y zip
          
      - name: Prepare project folders
        run: mkdir bin glue full

      - name: Build webassembly binary
        run: emcc programs/interpreter.c -lm -Os -s WASM=1 -o bin/vm.wasm
        
      - name: Build full javascript app
        run: emcc programs/interpreter.c -lm -O0 -s WASM=0 -s MODULARIZE=0 -s EXIT_RUNTIME=1 -s FORCE_FILESYSTEM=1 -s WASM_ASYNC_COMPILATION=0 -o full/app.js
        
      - name: Build full javascript module
        run: emcc programs/interpreter.c -lm -O0 -s WASM=0 -s MODULARIZE=1 -s EXIT_RUNTIME=1 -s EXPORT_ES6=1 -s FORCE_FILESYSTEM=1 -s WASM_ASYNC_COMPILATION=0 -o full/module.js

      - name: Made javascript glue app
        run: emcc programs/interpreter.c -lm -O0 -s WASM=1 -s MODULARIZE=0 -s EXIT_RUNTIME=1 -s FORCE_FILESYSTEM=1 -s WASM_ASYNC_COMPILATION=0 -o glue/app.js
        
      - name: Made javascript glue module
        run: emcc programs/interpreter.c -lm -O0 -s WASM=1 -s MODULARIZE=1 -s EXIT_RUNTIME=1 -s EXPORT_ES6=1 -s FORCE_FILESYSTEM=1 -s WASM_ASYNC_COMPILATION=0 -o glue/module.js

      - name: Made links with binary
        run: |
          sed -i 's/module.wasm/..\/bin\/vm.wasm/' ./*/module.js
          sed -i 's/app.wasm/..\/bin\/vm.wasm/' ./*/app.js
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish project
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Packaging project
        run: |
          mkdir npm
          mv bin npm
          mv glue npm
          mv full npm
          tar -czf 3bc-nodejs.tar.gz ./npm/*
          zip -r 3bc-nodejs.zip ./npm/*

      - name: Upload binaries to github
        uses: softprops/action-gh-release@v1
        with:
          files: "*.tar.gz"
