cmake_minimum_required(VERSION 3.0)
if(NOT DEFINED CMAKE_C_STANDARD)
set(CMAKE_C_STANDARD 90)
endif()
include(cmake/include.cmake)
include(cmake/logo.cmake)
include(cmake/target.cmake)
include(cmake/outputdir.cmake)
include(cmake/packages.cmake)

project(tbc C)
include(cmake/tests.cmake)

option(BUILD_HELLO "Build hello" "ON")
if(BUILD_HELLO)
    add_executable("hello" "${CMAKE_SOURCE_DIR}/programs/hello.c")
    target_link_libraries("hello" tbc_cpu_no_math)
    target_link_libraries("hello" tbc_legacy)
    target_link_libraries("hello" tbc_interpreter)
    target_link_libraries("hello" tbc_sys_std)
    target_link_libraries("hello" tbc_driver_no_math)
    target_link_libraries("hello" tbc_array_simple)
    target_link_libraries("hello" tbc_bus_cpu_hello)
    target_link_libraries("hello" tbc_bus_sys_hello)
endif(BUILD_HELLO)

option(BUILD_INTERPRETER "Build interpreter" "ON")
if(BUILD_INTERPRETER)
    add_executable("3bc" "${CMAKE_SOURCE_DIR}/programs/interpreter.c")
    target_link_libraries("3bc" tbc_cpu_std)
    target_link_libraries("3bc" tbc_legacy)
    target_link_libraries("3bc" tbc_interpreter)
    target_link_libraries("3bc" tbc_sys_std)
    target_link_libraries("3bc" tbc_driver_std)
    target_link_libraries("3bc" tbc_bus_std)
    target_link_libraries("3bc" tbc_array_simple)
    target_link_libraries("3bc" tbc_pkg_std_lang)
    if(NOT MSVC)
    target_link_libraries("3bc" m)
    endif()
endif(BUILD_INTERPRETER)
